<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="594" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="348" />
    <histories>
      <item value="refresh" />
      <item value="Maps each element of the current Observable into CompletableSources, subscribes to them and waits until the upstream and all CompletableSources complete." />
      <item value="concat" />
      <item value="원본" />
      <item value="dnjs" />
      <item value="dnjsa" />
      <item value="defer" />
      <item value="dege" />
      <item value="deger" />
      <item value="backpressure" />
      <item value="backpressuree" />
      <item value="Returns an Observable which will subscribe to this Completable and once that is completed then will subscribe to the next ObservableSource. An error event from this Completable will be propagated to the downstream observer and will result in skipping the subscription to the next ObservableSource." />
      <item value="Returns an Observable that is based on applying a specified function to the item emitted by the current Single, where that function returns an ObservableSource." />
      <item value="증가 선택 수" />
      <item value="선택 수" />
      <item value="selection count" />
      <item value="selections count" />
      <item value="삭제되기 전에" />
      <item value="Could not write JSON: class java.lang.String cannot be cast to class java.lang.Enum" />
      <item value="The Maybe class represents a deferred computation and emission of a single value, no value at all or an exception." />
      <item value="OnConflict strategy constant to ignore the conflict.&#10;An Insert DAO method that returns the inserted rows ids will return -1 for rows that are not inserted since this strategy will ignore the row if there is a conflict." />
      <item value="OnConflict strategy constant to replace the old data and continue the transaction.&#10;An Insert DAO method that returns the inserted rows ids will never return -1 since this strategy will always insert a row even if there is a conflict." />
      <item value="                .wait(1L)&#10;" />
      <item value="실패면 예외를 던진다" />
      <item value="성공이 아니면 예외를 던진다" />
      <item value="ㅅ" />
      <item value="4xx 에러면 에러를 던진다" />
      <item value="4xx 에러면 " />
      <item value="4xxㅔ" />
      <item value="4ㅌㅌ" />
      <item value="에" />
      <item value="에ㄹ" />
      <item value="4xx에러를 던진ㄷ" />
      <item value="4xx에러를 던진다" />
      <item value="4xx에러를 " />
      <item value="4xx에러" />
      <item value="4xx" />
      <item value="preferences" />
      <item value="preference" />
      <item value="불러오다" />
      <item value="꺼내기" />
      <item value="꺼내오기" />
      <item value="RJso" />
      <item value="기타" />
      <item value="접근자" />
      <item value="accesor" />
      <item value="lenient" />
      <item value="lenietn" />
      <item value="setlenient" />
      <item value="setle" />
    </histories>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1627810115574" />
  </component>
  <component name="Settings">
    <option name="phoneticFontFamily" value="AppleSDGothicNeoL00" />
    <option name="primaryFontFamily" value="AppleSDGothicNeoM00" />
  </component>
</application>