<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="580" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="348" />
    <histories>
      <item value="config chart" />
      <item value="configuration chart" />
      <item value="ㅊ" />
      <item value="차트 설정 설정" />
      <item value="차트 설정" />
      <item value="null이 아닌 것만 관찰한다" />
      <item value="load data" />
      <item value="load dat" />
      <item value="loading" />
      <item value="load" />
      <item value="road" />
      <item value="loa" />
      <item value="load view" />
      <item value="load " />
      <item value="기억할 수 있는" />
      <item value="Boxing is the process of putting a primitive value into an analogous object, such as creating an Integer to hold an int value. Unboxing is the process of retrieving the primitive value from such an object.&#10;Since the original value is unchanged during boxing and unboxing, there’s no point in doing either when not needed. This also applies to autoboxing and auto-unboxing (when Java implicitly handles the primitive/object transition for you)." />
      <item value="가격" />
      <item value="시" />
      <item value="cron" />
      <item value="Connection prematurely closed BEFORE response" />
      <item value="부하테스트" />
      <item value="부하" />
      <item value="매일 투표를 생성한다" />
      <item value="매일 " />
      <item value="투표 생성 스케쥴" />
      <item value="candlestick" />
      <item value="거래소 이름" />
      <item value="거래소" />
      <item value="거래량" />
      <item value="저가" />
      <item value="고가" />
      <item value="시가, 종가" />
      <item value="시가 " />
      <item value="시가" />
      <item value="data time" />
      <item value="axis" />
      <item value="gridlines" />
      <item value="grid" />
      <item value="두께" />
      <item value="두꼐" />
      <item value="오직 가이드라인으로만 사용" />
      <item value="ㅇ직 " />
      <item value="Transitions a TextView from one font size to another. This does not do any animation of TextView content and if the text changes, this transition will not run.&#10;The animation works by capturing a bitmap of the text at the start and end states. It then scales the start bitmap until it reaches a threshold and switches to the scaled end bitmap for the remainder of the animation. This keeps the jump in bitmaps in the middle of the animation, where it is less noticeable than at the beginning or end of the animation. This transition does not work well with cropped text. TextResize also does not work with changes in TextView gravity." />
      <item value="Reference to a Transition XML resource defining the desired Transition&#10;             used to move shared elements transferred into the Window's initial content Scene.&#10;             Corresponds to {@link android.view.Window#setSharedElementEnterTransition(&#10;             android.transition.Transition)}. --&gt;" />
      <item value="explode" />
      <item value="properties" />
      <item value="prope" />
      <item value="이벤트 발행" />
      <item value="애니메이션을 적용" />
      <item value="interpolator" />
    </histories>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1628242148040" />
  </component>
  <component name="Settings">
    <option name="phoneticFontFamily" value="AppleSDGothicNeoL00" />
    <option name="primaryFontFamily" value="AppleSDGothicNeoM00" />
  </component>
</application>