<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogWidth" value="548" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="348" />
    <histories>
      <item value="사각형" />
      <item value="facets" />
      <item value="An async function always wraps the return value in a Promise. Using return await is therefore redundant." />
      <item value="It is possible to use await on values which are not Promises, but it’s useless and misleading. The point of await is to pause execution until the Promise's asynchronous code has run to completion. With anything other than a Promise, there’s nothing to wait for.&#10;This rule raises an issue when an awaited value is guaranteed not to be a Promise." />
      <item value="redundant" />
      <item value="re" />
      <item value="punctuation" />
      <item value="punctuat" />
      <item value="deny" />
      <item value="diny" />
      <item value="dena" />
      <item value="denai" />
      <item value="디나이" />
      <item value="dini" />
      <item value="dinis" />
      <item value="Creating a new Random object each time a random value is needed is inefficient and may produce numbers which are not random depending on the JDK. For better efficiency and randomness, create a single Random, then store, and reuse it.&#10;The Random() constructor tries to set the seed with a distinct value every time. However there is no guarantee that the seed will be random or even uniformly distributed. Some JDK will use the current time as seed, which makes the generated numbers not random at all.&#10;This rule finds cases where a new Random is created each time a method is invoked and assigned to a local random variable." />
      <item value="시도 횟수" />
      <item value="시도" />
      <item value="시도회수" />
      <item value="횟수" />
      <item value="within" />
      <item value="레일리" />
      <item value="하위 패키지" />
      <item value="하위" />
      <item value="MemberService 표현식에서 MemberServiceImpl의 internal 메소드를 배치했을 때 거짓이 나오는 테스트" />
      <item value="MemberService 표현식에서 MemberServiceImpl의 internal 메소드를 배치했을 때 " />
      <item value="MemberService 표현식에서 MemberServiceImpl의 internal" />
      <item value="MemberService 표현식에서 MemberServiceImpl의 " />
      <item value="MemberService 표현식에서 " />
      <item value="MemberService 표현" />
      <item value="MemberService " />
      <item value="MemberService" />
      <item value="MemberServiceImp" />
      <item value="MemberService에 있는" />
      <item value="MemberService에 있는 " />
      <item value="Member" />
      <item value="org.spring.advanced.aop 하위 패키지" />
      <item value="org.spring.advanced.aop" />
      <item value="org.spring.advanced." />
      <item value="aspect" />
      <item value="상속" />
      <item value="method invocation" />
      <item value="invocation" />
      <item value="invoc" />
      <item value="in" />
      <item value="enhancer" />
      <item value="invocation handler" />
      <item value="invoce" />
      <item value="invo" />
      <item value="invoke" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="48" />
        <entry key="KOREAN" value="87" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1636912473855" />
  </component>
  <component name="Settings">
    <option name="phoneticFontFamily" value="AppleSDGothicNeoL00" />
    <option name="primaryFontFamily" value="AppleSDGothicNeoM00" />
  </component>
</application>