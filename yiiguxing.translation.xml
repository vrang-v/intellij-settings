<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="592" />
    <option name="newTranslationDialogX" value="623" />
    <option name="newTranslationDialogY" value="348" />
    <histories>
      <item value="attributes" />
      <item value="attribute" />
      <item value="After successfully authenticating with the OAuth2 Provider, we'll be generating an auth token for the user and sending the token to the redirectUri mentioned by the frontend client in the /oauth2/authorize request. We're not using cookies because they won't work well in mobile clients." />
      <item value="After successfully authenticating with the OAuth2 Provider, we'll be generating an auth token for the user and sending the token to the redirectUri mentioned by the frontend client in the/oauth2/authorize request. We're not using cookies because they won't work well in mobile clients." />
      <item value="After successfully authenticating with the OAuth2 Provider, we'll be generating an auth token for the user and sending the token to the redirectUri mentioned by the frontend client in the /oauth2/authorize request.&#10;    #- We're not using cookies because they won't work well in mobile clients." />
      <item value="After successfully authenticating with the OAuth2 Provider, we'll be generating an auth token for the user and sending the token to the redirectUri mentioned by the frontend client in the /oauth2/authorize request.&#10;    # We're not using cookies because they won't work well in mobile clients." />
      <item value="After successfully authenticating with the OAuth2 Provider,&#10;     we'll be generating an auth token for the user and sending the token to the redirectUri mentioned by the frontend client in the /oauth2/authorize request.&#10;    # We're not using cookies because they won't work well in mobile clients." />
      <item value="After successfully authenticating with the OAuth2 Provider,&#10;    # we'll be generating an auth token for the user and sending the token to the redirectUri mentioned by the frontend client in the /oauth2/authorize request.&#10;    # We're not using cookies because they won't work well in mobile clients." />
      <item value="After successfully authenticating with the OAuth2 Provider,&#10;    # we'll be generating an auth token for the user and sending the token to the&#10;    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.&#10;    # We're not using cookies because they won't work well in mobile clients." />
      <item value="principal" />
      <item value="Create a new builder with a CREATED status and a location header set to the given URI." />
      <item value="Override this method to expose the AuthenticationManager from configure(AuthenticationManagerBuilder) to be exposed as a Bean. For example:&#10;&#9;   @Bean(name name=&quot;myAuthenticationManager&quot;)&#10;&#9;   @Override&#10;&#9;   public AuthenticationManager authenticationManagerBean() throws Exception {&#10;&#9;       return super.authenticationManagerBean();&#10;&#9;   }" />
      <item value="Gets the AuthenticationManager to use. The default strategy is if configure(AuthenticationManagerBuilder) method is overridden to use the AuthenticationManagerBuilder that was passed in. Otherwise, autowire the AuthenticationManager by type." />
      <item value="결합" />
      <item value="r" />
      <item value="Type-safe alternative to basePackages for specifying the packages in which to select controllers to be advised by the @RestControllerAdvice annotated class.&#10;Consider creating a special no-op marker class or interface in each package that serves no purpose other than being referenced by this attribute." />
      <item value="Array of classes.&#10;Controllers that are assignable to at least one of the given types will be advised by the @RestControllerAdvice annotated class." />
      <item value="선도ㅈ" />
      <item value="선도자" />
      <item value="참여여부로 투표를 검색" />
      <item value="참여여부로 " />
      <item value="참여" />
      <item value="참여한 투표들" />
      <item value="참여한 투표" />
      <item value="participated is true" />
      <item value="participated" />
      <item value="partici" />
      <item value="만약 참여했다면 " />
      <item value="participating" />
      <item value="participation is true" />
      <item value="참여했나" />
      <item value="참여했나ㅇ" />
      <item value="참여했나요" />
      <item value="참여했" />
      <item value="참여 " />
      <item value="참여안함" />
      <item value="참여하지 않은" />
      <item value="참여 여부" />
      <item value="참여한 " />
      <item value="refresh" />
      <item value="Maps each element of the current Observable into CompletableSources, subscribes to them and waits until the upstream and all CompletableSources complete." />
      <item value="concat" />
      <item value="원본" />
      <item value="dnjs" />
      <item value="dnjsa" />
      <item value="defer" />
      <item value="dege" />
      <item value="deger" />
      <item value="backpressure" />
      <item value="backpressuree" />
    </histories>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1627810115574" />
  </component>
  <component name="Settings">
    <option name="phoneticFontFamily" value="AppleSDGothicNeoL00" />
    <option name="primaryFontFamily" value="AppleSDGothicNeoM00" />
  </component>
</application>